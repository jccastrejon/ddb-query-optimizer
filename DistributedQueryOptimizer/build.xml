<?xml version="1.0"?>
<project name="DistributedQueryOptimizer" basedir="." default="build">
	<property file="build.properties" />

	<path id="master-classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${web.dir}/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${appserver.home}/common/lib">
			<include name="servlet*.jar" />
		</fileset>
		<fileset dir="${appserver.lib}">
			<include name="servlet*.jar" />
		</fileset>
		<pathelement path="${build.dir}" />
	</path>

	<!-- Build -->
	<target name="clean">
		<delete includeemptydirs="true">
			<fileset dir="${build.dir}" includes="**/*" />
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${parser.dir}" includes="**/*" />
		</delete>
	</target>

	<target name="build">
		<delete includeemptydirs="true">
			<fileset dir="${build.dir}" includes="**/*" />
		</delete>
		<mkdir dir="${build.dir}" />
		<mkdir dir="${parser.dir}" />
		<jjtree target="${grammar.jjt}" outputdirectory="${parser.dir}" javacchome="${javacc.dir}" nodeusesparser="true" />
		<javacc target="${grammar.jj}" outputdirectory="${parser.dir}" javacchome="${javacc.dir}" />
		<javac destdir="${build.dir}" source="1.5" target="1.5" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}" />
			<classpath refid="master-classpath" />
		</javac>
		<copy todir="${build.dir}" preservelastmodified="true">
			<fileset dir="${cfg.dir}">
				<include name="**/*.properties" />
			</fileset>
		</copy>
	</target>

	<!-- Test -->
	<target name="buildTests">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" source="1.5" target="1.5" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${tst.dir}" />
			<classpath refid="master-classpath" />
		</javac>
		<copy todir="${build.dir}/sql" preservelastmodified="true">
			<fileset dir="${sql.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<target name="tests" depends="build, buildTests" description="Run tests">
		<junit printsummary="on" fork="false" haltonfailure="false" failureproperty="tests.failed" showoutput="false">
			<classpath refid="master-classpath" />
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${build.dir}">
					<include name="**/*Test.*" />
				</fileset>
			</batchtest>
		</junit>
		<fail if="tests.failed">
	            tests.failed=${tests.failed}
	            ***********************************************************
	            ***********************************************************
	            **** One or more tests failed! Check the output ... ****
	            ***********************************************************
	            ***********************************************************
	        </fail>
	</target>

	<!-- Deploy -->
	<target name="deploy" depends="build" description="Deploy application">
		<copy todir="${deploy.path}/${name}" preservelastmodified="true">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>

		<copy todir="${deploy.path}/${name}/WEB-INF/classes" preservelastmodified="true">
			<fileset dir="${build.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<target name="deploywar" depends="build" description="Deploy application as a WAR file">
		<mkdir dir="${web.dir}/WEB-INF/classes"/>
		<copy todir="${web.dir}/WEB-INF/classes" preservelastmodified="true">
			<fileset dir="${build.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<war destfile="${name}.war" webxml="${web.dir}/WEB-INF/web.xml">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</war>
		<delete dir="${web.dir}/WEB-INF/classes"/>
		
		<copy todir="${deploy.path}" preservelastmodified="true">
			<fileset dir=".">
				<include name="*.war" />
			</fileset>
		</copy>
	</target>

	<target name="undeploy" description="Un-Deploy application">
		<delete>
			<fileset dir="${deploy.path}/${name}">
				<include name="**/*.*" />
			</fileset>
		</delete>
	</target>


	<!-- Tomcat -->
	<path id="catalina-ant-classpath">
		<fileset dir="${appserver.lib}">
			<include name="catalina-ant.jar" />
		</fileset>
	</path>
	<taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="list" classname="org.apache.catalina.ant.ListTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="start" classname="org.apache.catalina.ant.StartTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<target name="install" description="Install application in Tomcat">
		<install url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" war="${name}" />
	</target>
	<target name="reload" description="Reload application in Tomcat">
		<reload url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
	</target>
	<target name="start" description="Start Tomcat application">
		<start url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
	</target>
	<target name="stop" description="Stop Tomcat application">
		<stop url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
	</target>
	<target name="list" description="List Tomcat applications">
		<list url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" />
	</target>
	<!-- End Tomcat tasks -->


	<!-- Distribute -->
	<target name="jar" depends="build">
		<delete dir="${dist.dir}" />
		<mkdir dir="${dist.dir}" />
		<copy file="MANIFEST.MF" todir="${dist.dir}" />
		<replace file="${dist.dir}/MANIFEST.MF" token="%%" value="${name}" />
		<replace file="${dist.dir}/MANIFEST.MF" token="##" value="${version}" />
		<jar destfile="${dist.dir}/${name}-${version}.jar" basedir="${build.dir}" manifest="${dist.dir}/MANIFEST.MF" />
		<delete file="${dist.dir}/MANIFEST.MF" />
	</target>

	<target name="dist" depends="jar">
		<delete file="${dist.dir}/${name}-${version}.zip" />
		<copy file="README.txt" todir="${dist.dir}" />
		<replace file="${dist.dir}/README.txt" token="%%" value="${name}" />
		<replace file="${dist.dir}/README.txt" token="##" value="${version}" />
		<zip destfile="${dist.dir}/${name}-${version}.zip">
			<fileset dir="${dist.dir}" />
			<zipfileset dir="${src.dir}" prefix="src" />
		</zip>
		<delete file="${dist.dir}/${name}-${version}.jar" />
		<delete file="${dist.dir}/README.txt" />
	</target>

</project>